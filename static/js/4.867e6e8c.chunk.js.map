{"version":3,"sources":["library/common/commonFunc.ts","components/DocumentView/DocumentView.module.css","components/DocumentArea/DocumentArea.module.css","components/EmptyDocument/EmptyDocument.module.css","components/DocumentView/DocumentView.tsx","library/img/frameEmpty.svg","components/EmptyDocument/EmptyDocument.tsx","components/DocumentArea/DocumentArea.tsx"],"names":["transformTypeToConstansCase","word","match","join","normalizeText","text","charAt","toUpperCase","slice","toLocaleLowerCase","setSeverityColor","severity","severityColor","parseInt","split","module","exports","DocumentView","observationData","index","notes","heuristics","evidence","recommendations","className","styles","style","backgroundColor","color","src","alt","map","elem","Math","random","EmptyDocument","svgEmpty","to","width","height","viewBox","fill","xmlns","d","DocumentArea","observationArray","useContext","ProjectContext","length","observation","id"],"mappings":"gGAAA,kHAEaA,EAA8B,SAACC,GAC1C,OAAQA,EAAKC,MAAM,sCAAwC,CAAED,IAAQE,KAAK,MAE/DC,EAAgB,SAACC,GAC5B,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAAGC,qBAGxCC,EAAmB,SAACC,GAChC,OAAOC,IAAcC,SAASF,EAASG,MAAM,KAAK,IAAI,K,oBCTxDC,EAAOC,QAAU,CAAC,UAAY,gCAAgC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,2BAA2B,MAAQ,4BAA4B,YAAc,kCAAkC,eAAiB,qCAAqC,sBAAsB,0CAA0C,MAAQ,4BAA4B,eAAe,qC,oBCAnaD,EAAOC,QAAU,CAAC,KAAO,6B,oBCAzBD,EAAOC,QAAU,CAAC,UAAY,iCAAiC,YAAY,iCAAiC,KAAO,4BAA4B,KAAO,8B,qFC6DvIC,EApDsC,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,MAC/DC,EAA0DF,EAA1DE,MAAOC,EAAmDH,EAAnDG,WAAYV,EAAuCO,EAAvCP,SAAUW,EAA6BJ,EAA7BI,SAAUC,EAAmBL,EAAnBK,gBAE9C,OACE,sBAAKC,UAAWC,IAAM,UAAtB,UAEE,sBAAKD,UAAWC,IAAM,MAAtB,UACE,6BAAKN,EAAM,IACX,sBACEO,MAAO,CACLC,gBAAiBjB,YAAiBC,GAClCiB,MAAoB,aAAbjB,EAAyB,UAAY,WAHhD,SAMGA,OAIL,sBAAKa,UAAWC,IAAM,KAAtB,UAEE,sBAAKD,UAAWC,IAAM,KAAtB,UACE,0CACCH,GAAY,qBACXO,IAAKP,EACLQ,IAAI,WACJN,UAAWC,IAAM,WAIrB,sBAAKD,UAAWC,IAAM,MAAtB,UACE,sBAAKD,UAAWC,IAAM,YAAtB,UACE,sBAAKD,UAAWC,IAAM,KAAtB,UACE,uCACA,4BAAIL,OAEN,sBAAKI,UAAWC,IAAM,KAAtB,UACE,4CACA,oBAAID,UAAWC,IAAO,uBAAtB,SACCJ,EAAWU,KAAI,SAAAC,GAAI,OAAI,6BAA0B5B,YAAc4B,IAA/BC,KAAKC,qBAI1C,sBAAKV,UAAW,CAACC,IAAM,KAAUA,IAAM,gBAAoBtB,KAAK,KAAhE,UACE,gDACA,4BAAIoB,iB,4CCtDD,MAA0B,uC,QC+B1BY,EA1BO,WACpB,OACE,qBAAKX,UAAWC,IAAM,UAAtB,SACE,sBAAKD,UAAWC,IAAO,aAAvB,UACC,qBAAKI,IAAKO,EAAUN,IAAI,KACvB,sBAAKN,UAAWC,IAAM,KAAtB,UACE,kEACA,yGAA2E,mDAA3E,2CACA,eAAC,IAAD,CACED,UAAWC,IAAM,KACjBY,GAAG,iBAFL,UAIE,qBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OAAOC,MAAM,6BAAlE,SACE,sBACEC,EAAE,8mBACFF,KAAK,cAET,qDCLGG,UAXM,WACnB,IACOC,EADKC,qBAAWC,KAChBF,iBACP,OACE,sBAAKrB,UAAWC,IAAM,KAAtB,UAC+B,IAA5BoB,EAAiBG,QAAgB,cAAC,EAAD,IACjCH,EAAiBd,KAAI,SAACkB,EAAa9B,GAAd,OAAwB,cAAC,EAAD,CAAmCD,gBAAiB+B,EAAa9B,MAAOA,GAArD8B,EAAYC","file":"static/js/4.867e6e8c.chunk.js","sourcesContent":["import {severityColor} from './commonData';\n\nexport const transformTypeToConstansCase = (word:string) => {\n  return (word.match(/[A-Z]+(?![a-z])|[A-Z]?[a-z]+|\\d+/g) || [ word ]).join(' ');\n};\nexport const normalizeText = (text:string) => {\n  return text.charAt(0).toUpperCase() + text.slice(1).toLocaleLowerCase(); \n}\n\nexport  const setSeverityColor = (severity:string) => {\n  return severityColor[parseInt(severity.split(' ')[0])-1]; \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DocumentView_container__3JkI-\",\"title\":\"DocumentView_title__3bAP8\",\"main\":\"DocumentView_main__3oCic\",\"card\":\"DocumentView_card__2VyOM\",\"under\":\"DocumentView_under__3qdT8\",\"observation\":\"DocumentView_observation__wgqDt\",\"recommendation\":\"DocumentView_recommendation__x1Nh0\",\"heuristic-container\":\"DocumentView_heuristic-container__3vIsh\",\"image\":\"DocumentView_image__3trhO\",\"evidence-img\":\"DocumentView_evidence-img__3dE83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area\":\"DocumentArea_area__2ci9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmptyDocument_container__3btKW\",\"info-area\":\"EmptyDocument_info-area__1XNoV\",\"info\":\"EmptyDocument_info__2htIL\",\"link\":\"EmptyDocument_link__1oALt\"};","import React from 'react';\nimport styles from './DocumentView.module.css'; \nimport {ObservationType} from '../../library/common/types'; \nimport { normalizeText } from '../../library/common/commonFunc';\nimport {setSeverityColor} from '../../library/common/commonFunc'; \ninterface DocumentViewInterface {\n  observationData: ObservationType;\n  index: number\n}\n\nconst DocumentView: React.FC<DocumentViewInterface>= ({observationData, index}) => {\n  const {notes, heuristics, severity, evidence, recommendations} = observationData; \n\n  return (\n    <div className={styles['container']}>\n      {/* Title */}\n      <div className={styles['title']}>\n        <h1>{index+1}</h1>\n        <span \n          style={{\n            backgroundColor: setSeverityColor(severity),\n            color: severity === '2 Middle'? '#1F1D2C' : '#FAFAFE' \n          }}\n        >\n          {severity}\n        </span>\n      </div>\n      {/* Content */}\n      <div className={styles['main']}>\n        {/* Evidence */}\n        <div className={styles['card']}>\n          <h1>Evidence</h1>\n          {evidence && <img \n            src={evidence} \n            alt=\"evidence\" \n            className={styles['image']}\n          />}\n        </div>\n        {/* Notes, heu, recommendation */}\n        <div className={styles['under']}>\n          <div className={styles['observation']}>\n            <div className={styles['card']}>\n              <h1>Notes</h1>\n              <p>{notes}</p>\n            </div>\n            <div className={styles['card']}>\n              <h1>Heuristics</h1>\n              <ul className={styles['heuristic-container']}>\n              {heuristics.map(elem => <li key={Math.random()} >{normalizeText(elem)}</li>)}\n              </ul>\n            </div>\n          </div>\n          <div className={[styles['card'], styles['recommendation']].join(' ')}>\n            <h1>Recommendation</h1>\n            <p>{recommendations}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default DocumentView\n","export default __webpack_public_path__ + \"static/media/frameEmpty.46ee8a1d.svg\";","import React from 'react'\nimport styles from './EmptyDocument.module.css'; \nimport svgEmpty from '../../library/img/frameEmpty.svg'; \nimport {Link } from \"react-router-dom\";\n\nconst EmptyDocument = () => {\n  return (\n    <div className={styles['container']}>\n      <div className={styles['info-area']}>\n       <img src={svgEmpty} alt=\"\" />\n        <div className={styles['info']}>\n          <h1>Start by creating an observation</h1>\n          <p>You can create an observation in the table view, by pressing the button <span>New Observation</span> and then adding the info in the form</p>\n          <Link \n            className={styles['link']}\n            to=\"/project/table\"\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path\n                d=\"M0 2C0 1.46957 0.210714 0.960859 0.585786 0.585786C0.960859 0.210714 1.46957 0 2 0L14 0C14.5304 0 15.0391 0.210714 15.4142 0.585786C15.7893 0.960859 16 1.46957 16 2V14C16 14.5304 15.7893 15.0391 15.4142 15.4142C15.0391 15.7893 14.5304 16 14 16H2C1.46957 16 0.960859 15.7893 0.585786 15.4142C0.210714 15.0391 0 14.5304 0 14V2ZM15 4H11V7H15V4ZM15 8H11V11H15V8ZM15 12H11V15H14C14.2652 15 14.5196 14.8946 14.7071 14.7071C14.8946 14.5196 15 14.2652 15 14V12ZM10 15V12H6V15H10ZM5 15V12H1V14C1 14.2652 1.10536 14.5196 1.29289 14.7071C1.48043 14.8946 1.73478 15 2 15H5ZM1 11H5V8H1V11ZM1 7H5V4H1V7ZM6 4V7H10V4H6ZM10 8H6V11H10V8Z\"\n                fill=\"#7F828F\" />\n            </svg>\n            <span>Table</span>\n            \n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default EmptyDocument\n","import React, {useContext} from 'react'\nimport DocumentView from '../DocumentView/DocumentView'\nimport styles from './DocumentArea.module.css';\nimport ProjectContext from '../../store/project-context';\nimport EmptyDocument from '../EmptyDocument/EmptyDocument';\n\nconst DocumentArea = () => {\n  const ctx = useContext(ProjectContext); \n  const {observationArray} = ctx; \n  return (\n    <div className={styles['area']}>\n      {observationArray.length === 0 && <EmptyDocument/>}\n      {observationArray.map((observation, index) => <DocumentView key={observation.id} observationData={observation} index={index}/>)}\n    </div>\n  )\n}\n\nexport default DocumentArea\n"],"sourceRoot":""}
{"version":3,"sources":["common/commonFunc.ts","HeuristicChunk/Table/TableActions/FilterTable.module.css","Observation/Observation.module.css","UI/ModalCard.module.css","UI/ModalScreen/ModalScreen.module.css","Observation/ObservationForm/ModalOverlay.module.css","Observation/ObservationForm/FileInput.module.css","HeuristicChunk/Table/Table.module.css","UI/ModalCard.tsx","UI/ModalScreen/ModalScreen.tsx","Observation/ObservationForm/CheckInput.tsx","Observation/ObservationForm/Select.tsx","Observation/ObservationForm/FileInput.tsx","Observation/ObservationForm/ModalOverlay.tsx","Observation/Observation.tsx","HeuristicChunk/Table/TableActions/FilterActions.tsx","HeuristicChunk/Table/TableActions/FilterTable.tsx","HeuristicChunk/Table/TableActions/TableActions.tsx","HeuristicChunk/Table/Table.tsx"],"names":["transformTypeToConstansCase","word","match","join","normalizeText","text","charAt","toUpperCase","slice","toLocaleLowerCase","setSeverityColor","severity","severityColor","parseInt","split","module","exports","ModalCard","children","className","styles","ModalScreen","setShowModal","modalRoot","document","getElementById","backdrop","ReactDOM","createPortal","motion","div","onClick","variants","appear","initial","animate","exit","CheckInput","name","validation","onEditCheckBoxArray","onChange","checked","type","toLowerCase","Select","value","onSetSelected","selectData","active","defaultValue","style","color","map","elem","Math","random","toString","FileInput","onSetEvidence","prevEvidence","Fragment","event","file","currentTarget","files","reader","FileReader","readAsDataURL","onload","e","target","result","accept","src","alt","xmlns","width","height","fill","viewBox","d","ModalOverlay","onAddObservation","editData","onSetObservation","notesDefault","notes","recommendationsDefault","recommendations","heuristicSelectedArrayDefault","heuristics","severityDefault","evidenceDefault","evidence","useState","setNotes","setRecommendations","heuristicSelectedArray","setHeuristicSelectedArray","setSeverity","setEvidence","includes","filter","currentCheckBox","findIndex","prev","observationHeuristics","form","onSubmit","preventDefault","formRef","elements","currentObservation","solution","id","newObservation","checkBoxElem","img","severityData","button","whileHover","scale","whileTap","Observation","observationData","index","onDeleteObservation","actionsActive","setActionsActive","showModal","AnimatePresence","exitBeforeEnter","onBlur","onMouseDown","backgroundColor","FilterActions","setFilterActionVisible","ctx","useContext","ProjectContext","filterData","setHeuristicFilter","setSeverityFilter","containerRef","useClickOutside","ref","dropIn","heuristic","FilterTable","filterActionVisible","TableActions","Table","observationArray","createObservation","editObservation","deleteObservation","observationsComponent","condition"],"mappings":"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","file":"static/js/3.7e3a5455.chunk.js","sourcesContent":["import {severityColor} from './commonData';\n\nexport const transformTypeToConstansCase = (word:string) => {\n  return (word.match(/[A-Z]+(?![a-z])|[A-Z]?[a-z]+|\\d+/g) || [ word ]).join(' ');\n};\nexport const normalizeText = (text:string) => {\n  return text.charAt(0).toUpperCase() + text.slice(1).toLocaleLowerCase(); \n}\n\nexport  const setSeverityColor = (severity:string) => {\n  return severityColor[parseInt(severity.split(' ')[0])-1]; \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FilterTable_btn__2K2UZ\",\"active\":\"FilterTable_active__R_DtM\",\"container\":\"FilterTable_container__23nRP\",\"filter-actions\":\"FilterTable_filter-actions__2icyo\",\"heuristic\":\"FilterTable_heuristic__3vaXG\",\"severity\":\"FilterTable_severity__3hDLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"t-header\":\"Observation_t-header__1nid0\",\"more\":\"Observation_more__3WAqe\",\"transparent\":\"Observation_transparent__3lmVd\",\"hidden\":\"Observation_hidden__1bPl_\",\"row-actions\":\"Observation_row-actions__2zIYB\",\"ul\":\"Observation_ul__244Qs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-card\":\"ModalCard_modal-card__3GEzp\",\"appear\":\"ModalCard_appear__EMS0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-wrapper\":\"ModalScreen_modal-wrapper__3E56k\",\"container\":\"ModalScreen_container__1NuIY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ModalOverlay_form__2bCgA\",\"textarea-label\":\"ModalOverlay_textarea-label__oHPJE\",\"check-box\":\"ModalOverlay_check-box__36qBW\",\"btn\":\"ModalOverlay_btn__12HWn\",\"select\":\"ModalOverlay_select__1sET2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn-container\":\"FileInput_btn-container__30Pll\",\"file-input\":\"FileInput_file-input__1p6o0\",\"thumb\":\"FileInput_thumb__1V5iR\",\"image-container\":\"FileInput_image-container__P0V93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__1Zu62\",\"table-container\":\"Table_table-container__1ognG\",\"btn-container\":\"Table_btn-container__1ie6A\",\"filter\":\"Table_filter__3swTj\"};","import React from 'react'; \n\nimport styles from './ModalCard.module.css'; \n\ninterface ModalCardInterface {\n  children?: React.ReactNode; \n  className?: string; \n\n}\n\nconst ModalCard: React.FC<ModalCardInterface> = ({children, className}) => {\n  return (\n    <div  className={`${styles['modal-card']} ${className}`}>\n      {children}\n    </div>\n  )\n}\nexport default ModalCard; ","import React, {Fragment} from 'react'; \nimport ReactDOM from 'react-dom';\nimport { ModalScreenInterface} from '../../common/types'; \nimport {appear} from '../../common/commonData'; \nimport styles from './ModalScreen.module.css';\nimport {motion} from 'framer-motion'; \n\n\n// ACTUAL COMPONENT\nconst ModalScreen:React.FC<ModalScreenInterface>= ({setShowModal, children}) => {\n  \n  const modalRoot = document.getElementById(\"modal-root\") as HTMLElement;\n  const backdrop = document.getElementById(\"backdrop-root\") as HTMLElement;\n  return (\n    <Fragment>\n      {ReactDOM.createPortal(\n        <motion.div \n          onClick={() => setShowModal(false)} \n          className={styles['modal-wrapper']}\n          variants={appear}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"exit\"\n        >\n        </motion.div>\n        , backdrop)}\n      {ReactDOM.createPortal(<div className={styles['container']}>{children}</div>, modalRoot)}\n    </Fragment>\n  )\n}\n\nexport default ModalScreen\n","import React from 'react'\nimport {CheckInputInterface} from '../../common/types'; \nimport {transformTypeToConstansCase,normalizeText} from '../../common/commonFunc'; \n\nconst CheckInput: React.FC<CheckInputInterface> = ({name, validation, onEditCheckBoxArray}) => {\n  const toggleCheckboxChange:React.ChangeEventHandler<HTMLInputElement> = () => onEditCheckBoxArray(name); \n  return (\n    <label>\n      <input onChange={toggleCheckboxChange} checked={validation} type=\"checkbox\" name={name}/>\n      <span>{normalizeText(transformTypeToConstansCase(name).toLowerCase())} {validation}</span>\n    </label>\n  )\n}\n\nexport default CheckInput; \n","import React from 'react'\nimport {transformTypeToConstansCase} from '../../common/commonFunc'; \n\nexport interface SelectInterface {\n  value: string;\n  onSetSelected: React.ChangeEventHandler<HTMLSelectElement>;\n  selectData: string[]; \n  name: string; \n  className?: string;\n  active: boolean;\n  defaultValue?: string | null\n}\n\nconst Select: React.FC<SelectInterface> = ({value,onSetSelected, selectData, name, className, active, defaultValue}) => {\n  \n  return (\n    <select style={{color: active ? '#FF7451' : '#FAFAFE'}} className={className || ''} onChange={onSetSelected} value={value.split(' ').join('')} name={name}>\n      <option value=\"\">{defaultValue || 'All'}</option>\n      {selectData.map(elem => <option key={Math.random().toString() } value={elem}>{transformTypeToConstansCase(elem)}</option>)}\n    </select>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport styles from './FileInput.module.css'; \ninterface FileInputInterface {\n  onSetEvidence: (img:string) => void; \n  prevEvidence: string | null; \n}; \n\nconst FileInput:React.FC<FileInputInterface> = ({onSetEvidence, prevEvidence}) => {\n\n  const handleFileInput:React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    const file: File = (event as any).currentTarget.files[0]; \n    const reader = new FileReader();\n    reader.readAsDataURL(file)\n\n    reader.onload = (e) => {\n      onSetEvidence((e as any).target.result)\n    }\n  }; \n\n  const handleDeleteImage = () => onSetEvidence('')\n  \n  return (\n    <React.Fragment>\n      {prevEvidence === '' && \n        <div className={styles['btn-container']}>\n          <input onChange={handleFileInput} className={styles['file-input']} type=\"file\" accept=\".jpg, .png\" name=\"file\"/>\n          <span>Upload Image</span>\n        </div>\n      }\n      {prevEvidence !== '' && \n        <div className={styles['image-container']}>\n          <img className={styles['thumb']} src={prevEvidence? prevEvidence : ''} alt=\"\" />\n          <svg onClick={handleDeleteImage} className={styles['cancel']} xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\n            <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\n          </svg>\n        </div>\n      }\n    </React.Fragment>\n\n  )\n}\n\nexport default FileInput\n\n","import React, {useState} from 'react'\nimport {motion} from 'framer-motion'; \nimport styles from './ModalOverlay.module.css'; \nimport '../../index.css';\n\nimport CheckInput from './CheckInput'; \nimport Select from './Select'; \n\nimport {transformTypeToConstansCase} from '../../common/commonFunc'; \nimport {ObservationType, ModalOverlayInterface, Form} from '../../common/types'; \nimport {heuristics,severityData, appear} from '../../common/commonData'; \nimport FileInput from './FileInput';\n\nconst ModalOverlay:React.FC<ModalOverlayInterface> = ({onAddObservation, setShowModal, editData, onSetObservation}) => {\n  const notesDefault = editData? editData.notes : '';\n  const recommendationsDefault = editData? editData.recommendations : '';\n  const heuristicSelectedArrayDefault = editData? editData.heuristics.map((elem:string) => elem.split(' ').join('')) : [];\n  const severityDefault = editData? editData.severity : '';\n  const evidenceDefault = editData? editData.evidence : '';\n\n  const [notes, setNotes] = useState(notesDefault); \n  const [recommendations, setRecommendations] = useState(recommendationsDefault); \n  const [heuristicSelectedArray, setHeuristicSelectedArray] = useState(heuristicSelectedArrayDefault); \n  const [severity, setSeverity] = useState<string>(severityDefault);\n  const [evidence, setEvidence] = useState<string>(evidenceDefault);\n  \n  const onSetNotes:React.ChangeEventHandler<HTMLTextAreaElement> = (event) => setNotes(event.target.value); \n  const onSetRecommendations:React.ChangeEventHandler<HTMLTextAreaElement> = (event) => setRecommendations(event.target.value); \n  const onSetSeverity:React.ChangeEventHandler<HTMLSelectElement> = (event) => setSeverity(event.target.value); \n  \n  const onEditCheckBoxArray = (name: string) => {\n    if(heuristicSelectedArray.includes(name)){\n      setHeuristicSelectedArray(heuristicSelectedArray.filter((elem:string) => elem !== name)); \n      return\n    }\n    const currentCheckBox = heuristics.findIndex((elem:string) => elem === name);\n    setHeuristicSelectedArray((prev:string[]) => [...prev, heuristics[currentCheckBox] ]); \n  }; \n\n  const handlerSubmit:React.FormEventHandler<Form>  = (event) => {\n    event.preventDefault();\n    const formRef = event.currentTarget.elements;\n    const currentObservation:ObservationType = {\n      notes: formRef.notes.value,\n      heuristics: heuristicSelectedArray.map((elem:string) => transformTypeToConstansCase(elem || '')),\n      severity: transformTypeToConstansCase(formRef.severity.value) ,\n      evidence: evidence, \n      recommendations: formRef.solution.value, \n      id:editData? editData.id : Math.random().toString(),\n    }\n    if(!editData && !!onAddObservation){\n      onAddObservation(currentObservation); \n      setShowModal(false); \n      return; \n    }\n    onSetObservation({newObservation:currentObservation, id: editData.id}); \n    // hide the modal\n    setShowModal(false); \n  };\n  \n  const onSetEvidence = (img:string) => {\n    setEvidence(img); \n  }\n\n  const observationHeuristics = heuristicSelectedArray.map((elem:string) => (elem.charAt(0).toUpperCase() + elem.slice(1)).split(' ').join('') )\n  \n  return(\n    <motion.form \n      className={styles['form']} \n      onSubmit={handlerSubmit}\n      variants={appear}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      <label className={styles['textarea-label']}>\n        Notes\n        <textarea onChange={onSetNotes} value={notes} name=\"notes\">{notes}</textarea>\n      </label>\n      <div className={styles['check-box']}>\n        {heuristics.map(checkBoxElem => (\n          <CheckInput \n            key={Math.random().toString()} \n            onEditCheckBoxArray={onEditCheckBoxArray}\n            validation={observationHeuristics.includes(checkBoxElem)}\n            name={checkBoxElem} \n            />\n          ))}\n      </div>\n      <label>Evidence</label>\n      <FileInput prevEvidence={evidence} onSetEvidence={onSetEvidence}/>\n      <label>\n        Severity\n          <Select defaultValue=\"Select One\" active={false} className={styles['select']} selectData={severityData} value={severity} name=\"severity\" onSetSelected={onSetSeverity} />\n      </label>\n\n      <label className={styles['textarea-label']}>\n        Solution\n        <textarea onChange={onSetRecommendations} value={recommendations} name=\"solution\">{recommendations}</textarea>\n      </label>\n      <motion.button \n        className={`reset-btn ${styles['btn']}`}\n        whileHover={{scale: 1.1}}\n        whileTap={{scale: 0.9}}\n      >\n        {editData? 'Save Changes' : 'Create Observation'}\n      </motion.button>\n    </motion.form>\n  ); \n}\nexport default ModalOverlay\n","import React, {Fragment, useState} from 'react'\nimport styles from './Observation.module.css'; \nimport ModalCard from '../UI/ModalCard'; \nimport ObservationForm from '../UI/ModalScreen/ModalScreen'; \nimport '../index.css';\nimport {ObservationInterface} from '../common/types'; \n\nimport {normalizeText, setSeverityColor} from '../common/commonFunc'; \nimport {AnimatePresence} from 'framer-motion'; \nimport ModalOverlay from './ObservationForm/ModalOverlay';\n\nconst Observation:React.FC<ObservationInterface> = ({observationData, onSetObservation, index,onDeleteObservation}) =>{\n  const [actionsActive, setActionsActive] = useState(true); \n  const [showModal, setShowModal] = useState(false); \n\n return (\n    <Fragment>\n      <AnimatePresence\n        initial={false}\n        exitBeforeEnter={true}\n      >\n        {showModal && (\n          <ObservationForm setShowModal={setShowModal}>\n            <ModalOverlay onSetObservation={onSetObservation} editData={observationData} setShowModal={setShowModal} />\n          </ObservationForm>\n        )}\n      </AnimatePresence>\n      <tr>\n        <th className={styles[\"t-header\"]} >\n          <h3>{index}</h3>\n          <button \n            onBlur={() => setActionsActive(true)} \n            onClick={() => setActionsActive(false)} \n            className={`${styles[\"transparent\"]} ${styles[\"more\"]}`}\n          >\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M3 9.5C2.60218 9.5 2.22064 9.34196 1.93934 9.06066C1.65804 8.77936 1.5 8.39782 1.5 8C1.5 7.60218 1.65804 7.22064 1.93934 6.93934C2.22064 6.65804 2.60218 6.5 3 6.5C3.39782 6.5 3.77936 6.65804 4.06066 6.93934C4.34196 7.22064 4.5 7.60218 4.5 8C4.5 8.39782 4.34196 8.77936 4.06066 9.06066C3.77936 9.34196 3.39782 9.5 3 9.5ZM8 9.5C7.60218 9.5 7.22064 9.34196 6.93934 9.06066C6.65804 8.77936 6.5 8.39782 6.5 8C6.5 7.60218 6.65804 7.22064 6.93934 6.93934C7.22064 6.65804 7.60218 6.5 8 6.5C8.39782 6.5 8.77936 6.65804 9.06066 6.93934C9.34196 7.22064 9.5 7.60218 9.5 8C9.5 8.39782 9.34196 8.77936 9.06066 9.06066C8.77936 9.34196 8.39782 9.5 8 9.5ZM13 9.5C12.6022 9.5 12.2206 9.34196 11.9393 9.06066C11.658 8.77936 11.5 8.39782 11.5 8C11.5 7.60218 11.658 7.22064 11.9393 6.93934C12.2206 6.65804 12.6022 6.5 13 6.5C13.3978 6.5 13.7794 6.65804 14.0607 6.93934C14.342 7.22064 14.5 7.60218 14.5 8C14.5 8.39782 14.342 8.77936 14.0607 9.06066C13.7794 9.34196 13.3978 9.5 13 9.5Z\" fill=\"#9C9BA8\"/>\n            </svg>\n          </button>\n            <ModalCard  className={`${styles['row-actions']} ${ actionsActive  && styles['hidden']}`}>\n              <Fragment> \n                <button onMouseDown={() => setShowModal(true)} className=\"reset-btn\">Edit</button>\n                <button onMouseDown={() => onDeleteObservation(observationData.id)} className=\"reset-btn\">Delete</button>\n              </Fragment>\n            </ModalCard>\n        </th>\n        <td>\n          <p>{observationData.notes}</p>\n        </td>\n        <td>\n          <ul className={styles['ul']}>\n            {observationData.heuristics.map(elem => <li key={Math.random()} >{normalizeText(elem)}</li>)}\n          </ul>\n        </td>\n        <td style={{backgroundColor: setSeverityColor(observationData.severity) }} className={styles[\"severity\"]}>{observationData.severity}</td>\n        <td>\n          {observationData.evidence && <img\n            src={observationData.evidence}\n            alt=\"evidence\"\n          />}\n        </td>\n        <td>\n          <p>{observationData.recommendations}</p>\n        </td>\n      </tr>    \n    </Fragment>\n  ); \n}; \n\n\n\nexport default Observation; \n","import React, {useContext} from 'react'; \nimport ProjectContext from '../../../store/project-context'; \nimport styles from './FilterTable.module.css'; \nimport Select from '../../../Observation/ObservationForm/Select'; \nimport {severityData,heuristics, dropIn} from '../../../common/commonData';\nimport {motion} from 'framer-motion'; \nimport useClickOutside from '../../../hooks/use-clickOutside'; \n\ninterface FilterActionsInterface {\n  setFilterActionVisible: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst FilterActions:React.FC<FilterActionsInterface> = ({setFilterActionVisible}) => {  \n  const ctx = useContext(ProjectContext); \n  const {filterData, setHeuristicFilter, setSeverityFilter} = ctx; \n  const containerRef = useClickOutside(setFilterActionVisible); \n\n  return(\n    <motion.div \n      ref={containerRef} \n      className={styles['filter-actions']}\n      variants={dropIn}\n      initial=\"hidden\"\n      animate=\"visible\"\n      exit=\"exit\"\n    >\n      <label  className={styles['heuristic']}>\n        <span>Heuristic</span>\n        <Select active ={filterData.heuristic !== ''} name= \"heuristicFilter\" selectData={heuristics} value={filterData.heuristic} onSetSelected={setHeuristicFilter} />\n      </label>\n      <label className={styles['severity']}>\n        <span>Severity</span>\n        <Select active ={filterData.severity !== ''} name=\"severityFilter\" selectData={severityData} value={filterData.severity} onSetSelected={setSeverityFilter} />\n      </label>\n    </motion.div>\n  );\n}\n\nexport default FilterActions; ","import React, {useState, useContext} from 'react'; \nimport ProjectContext from '../../../store/project-context'; \nimport '../../../index.css'; \nimport styles from './FilterTable.module.css'; \nimport FilterActions from './FilterActions'; \nimport {AnimatePresence} from 'framer-motion'; \n\n\n\nconst FilterTable = () => {\n  const ctx = useContext(ProjectContext); \n  const {filterData} = ctx; \n  const [filterActionVisible, setFilterActionVisible] = useState(false); \n  \n  const handleButtonFilterClick = () => setFilterActionVisible(true);  \n\n  const setActiveFilterState = () => filterData.heuristic !== '' || filterData.severity !== ''; \n\n  return (\n    <div className={styles[\"container\"]}>\n      <button  onClick={handleButtonFilterClick} className={`reset-btn ${styles['btn']} ${setActiveFilterState() && styles['active']}`}>\n        <svg width=\"16\" height=\"18\" viewBox=\"0 0 16 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M0.318237 1.07813C0.318237 0.916509 0.380494 0.761512 0.491311 0.647232C0.602127 0.532952 0.752428 0.46875 0.909146 0.46875H15.091C15.2477 0.46875 15.398 0.532952 15.5088 0.647232C15.6196 0.761512 15.6819 0.916509 15.6819 1.07813V3.51563C15.6818 3.66591 15.628 3.81088 15.5306 3.92269L10.3637 9.84338V15.7031C10.3636 15.831 10.3245 15.9555 10.252 16.0592C10.1794 16.1629 10.0771 16.2404 9.95951 16.2808L6.41406 17.4996C6.32527 17.5301 6.23073 17.5384 6.13822 17.5238C6.04571 17.5093 5.95787 17.4723 5.88194 17.4159C5.80601 17.3594 5.74416 17.2853 5.70147 17.1994C5.65879 17.1135 5.63649 17.0184 5.63642 16.9219V9.84338L0.46951 3.92269C0.372138 3.81088 0.318263 3.66591 0.318237 3.51563V1.07813ZM1.50006 1.6875V3.28163L6.66696 9.20231C6.76434 9.31412 6.81821 9.45909 6.81824 9.60938V16.0761L9.18187 15.2644V9.60938C9.1819 9.45909 9.23577 9.31412 9.33315 9.20231L14.5001 3.28163V1.6875H1.50006Z\" fill=\"#7F828F\"/>\n        </svg>\n        <span>Filters</span>\n      </button>\n      <AnimatePresence\n        initial={false}\n        exitBeforeEnter={true}\n      >\n        {filterActionVisible && <FilterActions  setFilterActionVisible={setFilterActionVisible}  />}\n      </AnimatePresence>\n    </div>\n  )\n}\n\nexport default FilterTable\n","import React from 'react'\nimport FIlterTable from './FilterTable'; \n\ninterface TableActionsInterface {\n  className: string; \n}\n\nconst TableActions:React.FC<TableActionsInterface> = ({className}) => {\n  return (\n    <section className={`${className}`}>\n      <FIlterTable/>\n    </section>\n  )\n}\n\nexport default TableActions\n","import React, {Fragment, useState, useContext} from 'react'; \nimport ProjectContext from '../../store/project-context';\n\nimport Observation from '../../Observation/Observation'; \nimport ModalScreen from '../../UI/ModalScreen/ModalScreen'; \nimport TableActions from './TableActions/TableActions'\nimport styles from './Table.module.css'; \nimport {transformTypeToConstansCase} from '../../common/commonFunc'; \nimport {ObservationType} from '../../common/types'; \nimport {AnimatePresence} from 'framer-motion'; \nimport ModalOverlay from '../../Observation/ObservationForm/ModalOverlay';\n\n\nconst Table = () => {\n  // 🔥\n  const ctx = useContext(ProjectContext); \n  const {observationArray, createObservation, editObservation, deleteObservation, filterData} = ctx; \n  const [showModal, setShowModal] = useState(false); \n\n  const condition = (elem:ObservationType) => {\n    if (filterData.severity !== '' && filterData.heuristic !== ''){\n      return (elem.severity === transformTypeToConstansCase(filterData.severity) && elem.severity !== '') && elem.heuristics.includes(transformTypeToConstansCase(filterData.heuristic)); \n    }else if(filterData.severity !== '' && filterData.heuristic === '' ){\n      return (elem.severity === transformTypeToConstansCase(filterData.severity) && elem.severity !== '');  \n    }else{\n      return elem.heuristics.includes(transformTypeToConstansCase(filterData.heuristic)); \n    }\n  };\n  \n  let dataArrayObservation = observationArray; \n  if(filterData.heuristic === '' && filterData.severity === ''){\n    dataArrayObservation = observationArray;\n  }else{\n    dataArrayObservation = observationArray.filter(elem => condition(elem)); \n  }; \n\n  const observationsComponent = dataArrayObservation.map((elem, index) => (\n    <Observation \n      onDeleteObservation={deleteObservation} \n      index={index+1} \n      onSetObservation={editObservation} \n      key={Math.random()} \n      observationData={elem}\n    />\n  ));\n\n  return (\n    <Fragment>\n      <AnimatePresence\n        initial={false}\n        exitBeforeEnter={true}\n      >\n        {showModal && (\n          <ModalScreen setShowModal={setShowModal}>\n            <ModalOverlay onAddObservation={createObservation} setShowModal={setShowModal} />\n          </ModalScreen>\n        )}\n      </AnimatePresence>\n      {/* Actions */}\n      <TableActions className={styles[\"filter\"]}/>\n      {/* Table */}\n      <section className={styles[\"wrapper\"]}>\n        <div className={styles[\"table-container\"]}>\n          {/* Table itself */}\n          <table>\n            <thead>\n              <tr>\n                <th className={styles[\"first\"]}>#</th>\n                <th>Notes</th>\n                <th>Heuristic</th>\n                <th>Severity</th>\n                <th>Evidence</th>\n                <th>Recommendation</th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* Observations */}\n              {observationsComponent}\n            </tbody>\n          </table>\n          <div className={styles[\"btn-container\"]}>\n            <button onClick={() => setShowModal(true)} >New Observation</button>\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  )\n}\n\nexport default Table; \n"],"sourceRoot":""}